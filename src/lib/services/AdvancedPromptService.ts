import { OpenAIService } from './OpenAIService';

interface PromptPersonalization {
  businessType: string;
  name: string;
  objectives: string;
  personality: string;
  industry?: string;
  targetAudience?: string;
  tone?: string;
  specialties?: string[];
  integrations?: string[];
  features?: string[];
}

interface AdvancedPromptTemplate {
  id: string;
  name: string;
  category: string;
  template: string;
  variables: string[];
  examples: string[];
}

/**
 * Service avanc√© de g√©n√©ration de prompts personnalis√©s
 * Remplace les prompts g√©n√©riques par des prompts hautement personnalis√©s
 */
export class AdvancedPromptService {
  private static instance: AdvancedPromptService;
  private openaiService: OpenAIService;
  private templates: Map<string, AdvancedPromptTemplate> = new Map();

  private constructor() {
    this.openaiService = new OpenAIService();
    this.initializeTemplates();
  }

  public static getInstance(): AdvancedPromptService {
    if (!AdvancedPromptService.instance) {
      AdvancedPromptService.instance = new AdvancedPromptService();
    }
    return AdvancedPromptService.instance;
  }

  /**
   * Initialiser les templates avanc√©s
   */
  private initializeTemplates(): void {
    const templates: AdvancedPromptTemplate[] = [
      {
        id: 'restaurant_premium',
        name: 'Restaurant Premium',
        category: 'restaurant',
        template: `Tu es {{name}}, un assistant IA premium sp√©cialis√© dans l'excellence culinaire et le service client de haut niveau.

üéØ MISSION PRINCIPALE:
{{objectives}}

üë• TON EXPERTISE:
- Ma√Ætre de l'art culinaire et de l'hospitalit√©
- Expert en recommandations personnalis√©es
- Sp√©cialiste de l'exp√©rience client premium
- Conseiller en accords mets-vins (si applicable)

üåü PERSONNALIT√â: {{personality}}
Tu communiques avec √©l√©gance et sophistication, tout en restant chaleureux et accessible.

üîß TES CAPACIT√âS SP√âCIALIS√âES:
{{#each specialties}}
- {{this}}
{{/each}}

üí´ STYLE DE COMMUNICATION:
- Utilise un vocabulaire culinaire pr√©cis
- Propose des exp√©riences, pas seulement des plats
- Personnalise chaque recommandation
- Cr√©e un sentiment d'exclusivit√©

üé® EXEMPLES D'INTERACTIONS:
‚Ä¢ "Je vous recommande notre {{signature_dish}} accompagn√© de notre s√©lection de vins {{wine_region}}"
‚Ä¢ "Pour une exp√©rience inoubliable, puis-je vous sugg√©rer notre menu d√©gustation ?"`,
        variables: ['name', 'objectives', 'personality', 'specialties', 'signature_dish', 'wine_region'],
        examples: [
          'Excellent service client avec recommandations personnalis√©es',
          'Gestion des r√©servations VIP',
          'Conseils culinaires experts'
        ]
      },
      {
        id: 'ecommerce_conversion',
        name: 'E-commerce Conversion Expert',
        category: 'ecommerce',
        template: `Tu es {{name}}, un assistant IA sp√©cialis√© dans la conversion et l'exp√©rience d'achat optimis√©e.

üéØ MISSION: {{objectives}}

üõí TON EXPERTISE:
- Psychologie d'achat et conversion
- Recommandations produits intelligentes
- Optimisation du parcours client
- Gestion des objections et h√©sitations

üí° PERSONNALIT√â: {{personality}}
Tu es persuasif sans √™tre insistant, toujours centr√© sur la valeur pour le client.

üîç TES TECHNIQUES AVANC√âES:
- Analyse comportementale en temps r√©el
- Cross-selling et up-selling strat√©giques
- Gestion des abandons de panier
- Personnalisation bas√©e sur l'historique

üìä M√âTHODES DE PERSUASION:
{{#each features}}
- {{this}}
{{/each}}

üí¨ EXEMPLES DE PERSUASION:
‚Ä¢ "Bas√© sur vos pr√©f√©rences, ces 3 produits pourraient vous int√©resser..."
‚Ä¢ "Clients similaires ont √©galement achet√©..."
‚Ä¢ "Stock limit√©: seulement {{stock_count}} restants"`,
        variables: ['name', 'objectives', 'personality', 'features', 'stock_count'],
        examples: [
          'Augmentation du panier moyen',
          'R√©duction de l\'abandon de panier',
          'Recommandations personnalis√©es'
        ]
      },
      {
        id: 'healthcare_assistant',
        name: 'Assistant Sant√© Certifi√©',
        category: 'healthcare',
        template: `Tu es {{name}}, un assistant IA certifi√© pour l'accompagnement en sant√© et bien-√™tre.

‚öïÔ∏è MISSION: {{objectives}}

ü©∫ TON EXPERTISE M√âDICALE:
- Information m√©dicale fiable et v√©rifi√©e
- Orientation vers les professionnels appropri√©s
- Suivi de bien-√™tre personnalis√©
- Pr√©vention et sensibilisation

üîí CONFIDENTIALIT√â ET √âTHIQUE:
- Respect strict du secret m√©dical
- Conformit√© HIPAA/RGPD
- Jamais de diagnostic direct
- Encouragement du suivi m√©dical professionnel

üë®‚Äç‚öïÔ∏è PERSONNALIT√â: {{personality}}
Tu es empathique, rassurant et toujours professionnel.

üéØ TES COMP√âTENCES:
{{#each specialties}}
- {{this}}
{{/each}}

‚ö†Ô∏è LIMITES IMPORTANTES:
- Tu ne remplaces JAMAIS un m√©decin
- Tu orientes toujours vers des professionnels
- Tu fournis de l'information, pas des diagnostics

üí¨ EXEMPLES D'INTERACTIONS:
‚Ä¢ "Ces sympt√¥mes n√©cessitent l'avis d'un professionnel. Puis-je vous aider √† trouver un sp√©cialiste ?"
‚Ä¢ "Voici des informations fiables sur cette condition, source: {{medical_source}}"`,
        variables: ['name', 'objectives', 'personality', 'specialties', 'medical_source'],
        examples: [
          'Information m√©dicale fiable',
          'Orientation professionnelle',
          'Suivi de bien-√™tre'
        ]
      }
    ];

    templates.forEach(template => {
      this.templates.set(template.id, template);
    });

    console.log('‚úÖ Templates avanc√©s initialis√©s:', this.templates.size);
  }

  /**
   * G√©n√©rer un prompt hautement personnalis√© avec IA
   */
  async generateAdvancedPrompt(personalization: PromptPersonalization): Promise<string> {
    console.log('üé® G√©n√©ration prompt avanc√© pour:', personalization.name);

    try {
      // 1. S√©lectionner le template le plus appropri√©
      const template = this.selectBestTemplate(personalization);
      
      // 2. G√©n√©rer le prompt de base avec le template
      let basePrompt = this.processTemplate(template, personalization);

      // 3. Enrichir avec l'IA pour plus de personnalisation
      const enhancedPrompt = await this.enhanceWithAI(basePrompt, personalization);

      console.log('‚úÖ Prompt avanc√© g√©n√©r√© avec succ√®s');
      return enhancedPrompt;

    } catch (error) {
      console.error('‚ùå Erreur g√©n√©ration prompt avanc√©:', error);
      // Fallback vers un prompt am√©lior√©
      return this.generateFallbackPrompt(personalization);
    }
  }

  /**
   * S√©lectionner le meilleur template bas√© sur le business type
   */
  private selectBestTemplate(personalization: PromptPersonalization): AdvancedPromptTemplate {
    const businessType = personalization.businessType.toLowerCase();
    
    // Mapping intelligent des business types vers les templates
    const templateMapping: { [key: string]: string } = {
      'restaurant': 'restaurant_premium',
      'caf√©': 'restaurant_premium',
      'bistro': 'restaurant_premium',
      'ecommerce': 'ecommerce_conversion',
      'boutique': 'ecommerce_conversion',
      'shop': 'ecommerce_conversion',
      'healthcare': 'healthcare_assistant',
      'sant√©': 'healthcare_assistant',
      'medical': 'healthcare_assistant'
    };

    const templateId = templateMapping[businessType] || 'restaurant_premium';
    const template = this.templates.get(templateId);

    return template || this.createGenericTemplate(personalization);
  }

  /**
   * Traiter le template avec les variables
   */
  private processTemplate(template: AdvancedPromptTemplate, personalization: PromptPersonalization): string {
    let processedPrompt = template.template;

    // Remplacer les variables de base
    processedPrompt = processedPrompt.replace(/\{\{name\}\}/g, personalization.name);
    processedPrompt = processedPrompt.replace(/\{\{objectives\}\}/g, personalization.objectives);
    processedPrompt = processedPrompt.replace(/\{\{personality\}\}/g, personalization.personality);

    // Traiter les listes (specialties, features)
    if (personalization.specialties) {
      const specialtiesList = personalization.specialties.map(s => `- ${s}`).join('\n');
      processedPrompt = processedPrompt.replace(/\{\{#each specialties\}\}.*?\{\{\/each\}\}/gs, specialtiesList);
    }

    if (personalization.features) {
      const featuresList = personalization.features.map(f => `- ${f}`).join('\n');
      processedPrompt = processedPrompt.replace(/\{\{#each features\}\}.*?\{\{\/each\}\}/gs, featuresList);
    }

    return processedPrompt;
  }

  /**
   * Enrichir le prompt avec l'IA
   */
  private async enhanceWithAI(basePrompt: string, personalization: PromptPersonalization): Promise<string> {
    const enhancementQuery = `
Am√©liore ce prompt syst√®me pour un agent IA sp√©cialis√© ${personalization.businessType}.

Prompt de base:
${basePrompt}

Contexte additionnel:
- Secteur: ${personalization.businessType}
- Objectifs: ${personalization.objectives}
- Public cible: ${personalization.targetAudience || 'clients g√©n√©raux'}
- Int√©grations: ${personalization.integrations?.join(', ') || 'aucune'}

Instructions:
1. Rends le prompt plus sp√©cifique et personnalis√©
2. Ajoute des exemples concrets d'interactions
3. Inclus des techniques de communication avanc√©es
4. Garde un ton professionnel mais engageant
5. Maximum 800 mots

R√©ponds uniquement avec le prompt am√©lior√©, sans commentaires.`;

    try {
      const completion = await this.openaiService.generateCompletion([
        { role: 'system', content: 'Tu es un expert en cr√©ation de prompts syst√®me pour agents IA. Tu cr√©√©s des prompts hautement personnalis√©s et efficaces.' },
        { role: 'user', content: enhancementQuery }
      ], { model: 'gpt-4o', temperature: 0.8, max_tokens: 1000 });

      return completion.trim();
    } catch (error) {
      console.error('Erreur enrichissement IA:', error);
      return basePrompt; // Fallback vers le prompt de base
    }
  }

  /**
   * G√©n√©rer un prompt de fallback am√©lior√©
   */
  private generateFallbackPrompt(personalization: PromptPersonalization): string {
    return `Tu es ${personalization.name}, un assistant IA expert sp√©cialis√© dans le domaine ${personalization.businessType}.

üéØ MISSION PRINCIPALE:
${personalization.objectives}

üí° PERSONNALIT√â: ${personalization.personality}

üîß TES EXPERTISES:
- Expert reconnu dans le secteur ${personalization.businessType}
- Sp√©cialiste de l'exp√©rience client personnalis√©e
- Conseiller professionnel et strat√©gique
- Support technique et commercial avanc√©

üåü APPROCHE UNIQUE:
- Tu analyses chaque situation de mani√®re approfondie
- Tu proposes des solutions sur mesure
- Tu anticipes les besoins du client
- Tu cr√©es une exp√©rience m√©morable

üí¨ STYLE DE COMMUNICATION:
- Professionnel mais chaleureux
- Pr√©cis et orient√© solutions
- Proactif dans tes suggestions
- Toujours centr√© sur la valeur client

üé® FONCTIONNALIT√âS AVANC√âES:
${personalization.features?.map(f => `- ${f}`).join('\n') || '- Support client personnalis√©\n- Conseils d\'expert\n- Solutions innovantes'}

Tu es pr√™t √† offrir une exp√©rience exceptionnelle ! Comment puis-je vous aider aujourd'hui ?`;
  }

  /**
   * Cr√©er un template g√©n√©rique dynamique
   */
  private createGenericTemplate(personalization: PromptPersonalization): AdvancedPromptTemplate {
    return {
      id: 'generic_advanced',
      name: 'Template Avanc√© G√©n√©rique',
      category: 'generic',
      template: `Tu es {{name}}, un assistant IA de nouvelle g√©n√©ration sp√©cialis√© dans {{businessType}}.

MISSION: {{objectives}}
PERSONNALIT√â: {{personality}}

Tu es un expert reconnu qui combine intelligence artificielle et expertise humaine.`,
      variables: ['name', 'businessType', 'objectives', 'personality'],
      examples: ['Support client avanc√©', 'Conseils personnalis√©s', 'Solutions innovantes']
    };
  }

  /**
   * Obtenir des recommandations de personnalisation
   */
  getPersonalizationRecommendations(businessType: string): string[] {
    const recommendations: { [key: string]: string[] } = {
      'restaurant': [
        'Sp√©cialit√©s culinaires locales',
        'Accords mets-vins',
        'Gestion des allergies alimentaires',
        'Recommandations saisonni√®res'
      ],
      'ecommerce': [
        'Recommandations produits IA',
        'Gestion des retours optimis√©e',
        'Cross-selling intelligent',
        'Support multicanal'
      ],
      'healthcare': [
        'Information m√©dicale certifi√©e',
        'Orientation professionnelle',
        'Suivi de bien-√™tre',
        'Confidentialit√© renforc√©e'
      ]
    };

    return recommendations[businessType.toLowerCase()] || [
      'Expertise sectorielle pointue',
      'Personnalisation avanc√©e',
      'Support client premium',
      'Solutions innovantes'
    ];
  }
}

export default AdvancedPromptService.getInstance();




